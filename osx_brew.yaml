---
- name: Install OS Packages
  connection: local
  hosts: localhost
  vars:
    brew_cask_packages_install: []
    brew_cask_packages_uninstall:
      # community.general.packaging.os.homebrew_cask with state: absent fails on empy list '[]', 
      # unlike community.general.packaging.os.homebrew...
      - some_silly_default_that_will_never_exist
    brew_packages_install: []
    brew_packages_uninstall: []
  tasks:
    - name: Define Homebrew Cask Packages to Install
      ansible.builtin.set_fact:
        brew_cask_packages_install: "{{ brew_cask_packages_install + [item.name] }}"
      loop: "{{ brew_cask_packages }}"
      when: item.state | lower == "present"

    - name: Define Homebrew Cask Packages to Uninstall
      ansible.builtin.set_fact:
        brew_cask_packages_uninstall: "{{ brew_cask_packages_uninstall + [item.name] }}"
      loop: "{{ brew_cask_packages }}"
      when: item.state | lower == "absent"

    - name: Define Homebrew Packages to Install
      ansible.builtin.set_fact:
        brew_packages_install: "{{ brew_packages_install + [item.name] }}"
      loop: "{{ brew_packages }}"
      when: item.state | lower == "present"

    - name: Define Homebrew Packages to Uninstall
      ansible.builtin.set_fact:
        brew_packages_uninstall: "{{ brew_packages_uninstall + [item.name] }}"
      loop: "{{ brew_packages }}"
      when: item.state | lower == "absent"

    - name: Ensure HomeBrew
      when: ansible_os_family == "Darwin"
      block:
        - name: Set HomeBrew path
          ansible.builtin.set_fact:
            homebrew_path: /usr/local/bin/brew
          when: ansible_architecture != "arm64"

        - name: Set HomeBrew path
          ansible.builtin.set_fact:
            homebrew_path: /opt/homebrew/bin
          when: ansible_architecture == "arm64"

        - name: Ensuring Homebrew Is Installed
          ansible.builtin.stat:
            path: "{{ homebrew_path  }}"
          register: homebrew_check

        - name: Fail If Homebrew Is Not Installed and install_homebrew_if_missing Is False
          ansible.builtin.fail:
            msg: Homebrew is missing...Install from http://brew.sh/
          when:
            - not homebrew_check.stat.exists
            - not install_homebrew_if_missing|bool

        - name: Installing Homebrew
          ansible.builtin.command: >
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          when:
            - not homebrew_check.stat.exists
            - install_homebrew_if_missing|bool

    - name: Apply macOS Homebrew tasks
      when: ansible_os_family == "Darwin"
      block:
        - name: Updating Homebrew
          community.general.packaging.os.homebrew:
            update_homebrew: "{{ update_homebrew }}"
          register: result
          until: result is successful
          when: homebrew_check.stat.exists

        - name: Upgrading Homebrew Packages
          community.general.packaging.os.homebrew:
            upgrade_all: "{{ upgrade_homebrew_packages }}"
          register: result
          until: result is successful
          when: homebrew_check.stat.exists

        - name: Installing Homebrew Taps
          community.general.packaging.os.homebrew_tap:
            name: "{{ item.name }}"
            state: "{{ item.state }}"
          register: result
          until: result is successful
          loop: "{{ brew_taps }}"
          when: homebrew_check.stat.exists

        - name: Installing Homebrew Cask Packages
          community.general.packaging.os.homebrew_cask:
            name: "{{ brew_cask_packages_install }}"
            state: present
          register: result
          until: result is successful
          when: homebrew_check.stat.exists

        - name: Uninstall Homebrew Cask Packages
          community.general.packaging.os.homebrew_cask:
            name: "{{ brew_cask_packages_uninstall }}"
            state: absent
          register: result
          until: result is successful
          when: homebrew_check.stat.exists

        - name: Installing Homebrew Packages
          community.general.packaging.os.homebrew:
            name: "{{ brew_packages_install }}"
            state: present
          register: result
          until: result is successful
          when: homebrew_check.stat.exists

        - name: Uninstall Homebrew Packages
          community.general.packaging.os.homebrew:
            name: "{{ brew_packages_uninstall }}"
            state: absent
          register: result
          until: result is successful
          when: homebrew_check.stat.exists
